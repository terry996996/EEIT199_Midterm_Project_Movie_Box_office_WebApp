package com.gmail.terry996996.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import com.gmail.terry996996.dao.UserDAO;
import com.gmail.terry996996.domain.UserBean;

import jakarta.servlet.http.HttpSession;
import jakarta.validation.Valid;

@Controller
public class LoginController {
	@Autowired
	private UserDAO dao;

	@GetMapping("/login")
	public String showLoginForm(Model model) {
		model.addAttribute("user", new UserBean());
		return "movies/login";
	}

	@PostMapping("/login")
	public String processLogin(@ModelAttribute("user") UserBean user, Model model, HttpSession session) {
		return dao.findByAccountAndPassword(user.getAccount(), user.getPassword()).map(account -> {
			session.setAttribute("user", account);
			return "redirect:/movies/index"; // 登入成功
		}).orElseGet(() -> {
			model.addAttribute("loginError", "帳號或密碼錯誤");
			return "movies/login";
		});
	}

	@GetMapping("/register")
	public String showRegisterForm(Model model) {
		model.addAttribute("user", new UserBean());
		return "movies/register";
	}

	@PostMapping("/register")
	public String processRegister(@Valid @ModelAttribute("user") UserBean user, BindingResult result, Model model) {
		if (dao.findByAccount(user.getAccount()).isPresent()) {
			result.rejectValue("account", "error.user", "帳號已被使用");
		}

		if (result.hasErrors()) {
			return "movies/register";
		}

		dao.save(user);
		return "redirect:/login";
	}

	@GetMapping("/logout")
	public String logout(HttpSession session) {
		session.invalidate();
		return "redirect:/login";
	}
}
