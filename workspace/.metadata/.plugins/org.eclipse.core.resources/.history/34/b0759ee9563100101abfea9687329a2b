package com.gmail.terry996996.service;

import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.time.LocalDateTime;
import java.util.Arrays;

import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.gmail.terry996996.dao.MovieDAO;
import com.gmail.terry996996.domain.MovieBean;
import com.gmail.terry996996.domain.UserBean;
import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;

import jakarta.servlet.http.HttpSession;

@Service
public class UploadService {
	
	@Autowired
	private MovieDAO dao;
	
	
	public void importFromJson(MultipartFile file, HttpSession session) throws IOException {
	    String content = new String(file.getBytes(), StandardCharsets.UTF_8); // 讀取檔案內容為字串
	    JSONObject jsonObject = new JSONObject(content); // 轉成 JSON 物件

	    JSONArray movieList = jsonObject.getJSONArray("list");
	    UserBean loginUser = (UserBean) session.getAttribute("user");
	    LocalDateTime now = LocalDateTime.now();

	    for (int i = 0; i < movieList.length(); i++) {
	        JSONObject movieData = movieList.getJSONObject(i);
	        
	        MovieBean movie = new MovieBean();
	        movie.setCountry(movieData.optString("country"));
	        movie.setMovieName(movieData.optString("name"));
	        movie.setApplicant(movieData.optString("issue"));
	        movie.setProdUnit(movieData.optString("produce"));
	        movie.setShowTheaterNum(movieData.optInt("theaterCount"));
	        movie.setBoxOffice(movieData.optLong("tickets"));
	        movie.setSales(movieData.optLong("amounts"));
	        movie.setCreateTime(now);
	        movie.setUpdateTime(now);
	        movie.setCreateName(loginUser != null ? loginUser.getAccount() : "unknown");
	        movie.setUpdateName(loginUser != null ? loginUser.getAccount() : "unknown");

	        dao.save(movie);
	    }
	}
	
	public void importFromCsv(@RequestParam("file") MultipartFile file, HttpSession session) throws IOException, CsvValidationException {
		try (CSVReader reader = new CSVReader(new InputStreamReader(file.getInputStream(), StandardCharsets.UTF_8))) {

			String[] line;
			boolean skipHeader = true;
			int lineNumber = 0;

			while ((line = reader.readNext()) != null) {
				lineNumber++;
				if (skipHeader) {
					skipHeader = false;
					continue;
				}

				try {
					// 清理與解析
					String[] tokens = Arrays.stream(line).map(s -> s != null ? s.trim().replace("\"", "") : "")
							.toArray(String[]::new);

					if (tokens.length < 7) {
						// 記錄日誌並跳過此行
						System.out.println("第 " + lineNumber + " 行資料欄位不足，已跳過");
						continue;
					}

					MovieBean movie = new MovieBean();
					movie.setCountry(tokens[0].trim());
					movie.setMovieName(tokens[1].trim());
					movie.setApplicant(tokens[2].trim());
					movie.setProdUnit(tokens[3].trim());

					// 安全地解析整數和長整數
					try {
						if (tokens[4] != null && !tokens[4].trim().isEmpty()) {
							movie.setShowTheaterNum(Integer.parseInt(tokens[4].trim()));
						} else {
							movie.setShowTheaterNum(0); // 或者設定預設值
						}
					} catch (NumberFormatException e) {
						System.out.println("第 " + lineNumber + " 行的放映戲院數量格式不正確: " + tokens[4] + "，已設為0");
						movie.setShowTheaterNum(0);
					}

					try {
						if (tokens[5] != null && !tokens[5].trim().isEmpty()) {
							movie.setBoxOffice(Long.parseLong(tokens[5].replace(",", "").trim()));
						} else {
							movie.setBoxOffice(0L);
						}
					} catch (NumberFormatException e) {
						System.out.println("第 " + lineNumber + " 行的票房格式不正確: " + tokens[5] + "，已設為0");
						movie.setBoxOffice(0L);
					}

					try {
						if (tokens[6] != null && !tokens[6].trim().isEmpty()) {
							movie.setSales(Long.parseLong(tokens[6].replace(",", "").trim()));
						} else {
							movie.setSales(0L);
						}
					} catch (NumberFormatException e) {
						System.out.println("第 " + lineNumber + " 行的銷售額格式不正確: " + tokens[6] + "，已設為0");
						movie.setSales(0L);
					}

					LocalDateTime now = LocalDateTime.now();
					UserBean loginUser = (UserBean) session.getAttribute("user");
					movie.setCreateTime(now);
					movie.setUpdateTime(now);
					movie.setCreateName(loginUser != null ? loginUser.getAccount() : "unknown");
					movie.setUpdateName(loginUser != null ? loginUser.getAccount() : "unknown");

					dao.save(movie);
				} catch (Exception e) {
					// 記錄單行處理錯誤但繼續處理其他行
					System.out.println("處理第 " + lineNumber + " 行時發生錯誤: " + e.getMessage());
				}
			}
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}
